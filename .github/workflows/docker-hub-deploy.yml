name: Deploy to Docker Hub

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  PROJECT_NAME: coffee-counter

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROJECT_NAME }}-frontend
          ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROJECT_NAME }}-auth-service
          ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROJECT_NAME }}-api-service
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROJECT_NAME }}-frontend:latest
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push Auth Service
      uses: docker/build-push-action@v5
      with:
        context: ./auth-service
        file: ./auth-service/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROJECT_NAME }}-auth-service:latest
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push API Service
      uses: docker/build-push-action@v5
      with:
        context: ./api-service
        file: ./api-service/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROJECT_NAME }}-api-service:latest
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Test deployment
      if: github.event_name != 'pull_request'
      run: |
        # Create test environment
        echo "Testing Docker Hub images..."
        docker pull ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROJECT_NAME }}-frontend:latest
        docker pull ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROJECT_NAME }}-auth-service:latest
        docker pull ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROJECT_NAME }}-api-service:latest
        
        # Basic smoke test
        docker run --rm ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROJECT_NAME }}-frontend:latest nginx -t
        echo "âœ… All images built and pushed successfully!"
        
    - name: Update deployment status
      if: github.event_name != 'pull_request'
      run: |
        echo "ðŸŽ‰ Deployment completed!"
        echo "ðŸ“¦ Images available at:"
        echo "  - ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROJECT_NAME }}-frontend:latest"
        echo "  - ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROJECT_NAME }}-auth-service:latest"
        echo "  - ${{ env.DOCKER_HUB_USERNAME }}/${{ env.PROJECT_NAME }}-api-service:latest"
